{"version":3,"sources":["webpack:///./src/components/hashtags.js","webpack:///./src/pages/tags.js"],"names":["Hashtags","render","tags","this","props","map","tag","style","boxShadow","borderRadius","padding","textDecoration","fontWeight","fontSize","height","lineHeight","color","marginLeft","rhythm","background","to","key","React","Component","TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","display","flexWrap","justifyContent","listStyle","marginBottom","fieldValue","totalCount","pageQuery"],"mappings":"wJAKMA,E,kGACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KAER,OACI,8BACGA,EAAKG,KAAI,SAACC,GACT,OACE,kCAEE,kBAAC,OAAD,CACAC,MAAO,CACLC,UAAU,oCACVC,aAAa,MACbC,QAAQ,YACRC,eAAe,OACfC,WAAW,MACXC,SAAS,OACTC,OAAO,OACPC,WAAW,OACXC,MAAM,UACNC,WAAYC,YAAO,EAAE,GACrBC,WAAW,WAEbC,GAAE,SAAWd,EACbe,IAAKf,GAfL,IAiBEA,S,GA3BKgB,IAAMC,WAqCdvB,O,kCC1Cf,kJAgFewB,UAnEE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAJL,OAQb,kBAAC,IAAD,CAAQG,SAAS,QAAQH,MAAOA,GAC5B,kBAAC,IAAD,CAAKA,MAAM,aACX,6BACE,wBACErB,MAAO,CACLyB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVzB,QAAS,EACT0B,aAAc,IAGhB,4BACA,kBAAC,OAAD,CAAMhB,GAAG,KAAT,kBAIJ,6BACA,wCACA,4BACKM,EAAMrB,KAAI,SAAAC,GAAG,OACd,wBAAIe,IAAKf,EAAI+B,YACT,kBAAC,IAAD,CAAUnC,KAAM,CAACI,EAAI+B,cADzB,MAEa/B,EAAIgC,iBAKrB,wBACI/B,MAAO,CACL6B,aAAclB,YAAO,MAG3B,gCACI,kBAAC,IAAD,SA0BL,IAAMqB,EAAS","file":"component---src-pages-tags-js-6a892482463e4c0fcb79.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nclass Hashtags extends React.Component {\r\n  render() {\r\n    const { tags } = this.props\r\n\r\n    return (\r\n        <span>\r\n          {tags.map((tag) => {\r\n            return (\r\n              <span>\r\n                {` `}\r\n                <Link\r\n                style={{\r\n                  boxShadow: `inset 0 -1px 0 rgba(27,31,35,.12)`,\r\n                  borderRadius: `2px`,\r\n                  padding: `.15em 4px`,\r\n                  textDecoration: `none`,\r\n                  fontWeight: `600`,\r\n                  fontSize: `12px`,\r\n                  height: `20px`,\r\n                  lineHeight: `15px`,\r\n                  color: `inherit`,\r\n                  marginLeft: rhythm(1/4),\r\n                  background: `#ededed`,\r\n                }}\r\n                to={`/tags/${tag}`}\r\n                key={tag}\r\n              >\r\n                #{tag}\r\n              </Link>\r\n              </span>\r\n            )\r\n          })}\r\n        </span>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Hashtags\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Components\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Hashtags from \"../components/hashtags\"\r\nimport Bio from \"../components/bio\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\n// TODO: look at https://dev.to/tags tag names and colors\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n    <Layout location=\"/tags\" title={title}>\r\n        <SEO title=\"All Tags\" />\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            <li>\r\n            <Link to=\"/\">← All Posts</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div>\r\n        <h1>All Tags</h1>\r\n        <ul>\r\n            {group.map(tag => (\r\n            <li key={tag.fieldValue}>\r\n                <Hashtags tags={[tag.fieldValue]} />\r\n                &nbsp;× {tag.totalCount}\r\n            </li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n        <hr\r\n            style={{\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          />\r\n        <footer>\r\n            <Bio />\r\n        </footer>\r\n\r\n    </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}