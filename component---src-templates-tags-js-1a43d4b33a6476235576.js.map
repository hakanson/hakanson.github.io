{"version":3,"file":"component---src-templates-tags-js-1a43d4b33a6476235576.js","mappings":"2KAKMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAkCH,OAlCGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KAER,OACI,4BACGA,EAAKG,KAAI,SAACC,GACT,OACE,gCAEE,gBAAC,EAAAC,KAAD,CACAC,MAAO,CACLC,UAAU,oCACVC,aAAa,MACbC,QAAQ,YACRC,eAAe,OACfC,WAAW,MACXC,SAAS,OACTC,OAAO,OACPC,WAAW,OACXC,MAAM,UACNC,YAAYC,EAAAA,EAAAA,IAAO,EAAE,GACrBC,WAAW,WAEbC,GAAE,SAAWf,EACbgB,IAAKhB,GAfL,IAiBEA,SAOf,EAlCGN,CAAiBuB,EAAAA,WAqCvB,O,sGC2DA,UA1Fa,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBnB,EAAQkB,EAARlB,IACR,EAA8BmB,EAAKC,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACPC,EAAUJ,EAAKK,KAAKC,aAApBF,MACFG,EAAeJ,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,YAEHtB,EAEZ,OACE,gBAAC,IAAD,CAAQ2B,SAAQ,SAAW3B,EAAOuB,MAAOA,GACzC,gBAAC,IAAD,CAAKA,MAAK,IAAMvB,IAChB,2BACE,sBACEE,MAAO,CACL0B,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACV1B,QAAS,EACT2B,aAAc,IAGhB,0BACA,gBAAC,EAAA/B,KAAD,CAAMc,GAAG,KAAT,gBAEA,0BACA,gBAAC,EAAAd,KAAD,CAAMc,GAAG,SAAT,iBAIJ,2BACE,0BAAKW,GACL,0BACGL,EAAMtB,KAAI,YAAe,IAAZkC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACR,EAA8BD,EAAKG,YAA3Bb,EAAR,EAAQA,MAAOc,EAAf,EAAeA,KAAMzC,EAArB,EAAqBA,KACrB,OACE,sBAAIoB,IAAKkB,GACP,gBAAC,EAAAjC,KAAD,CAAMc,GAAImB,GAAOX,GACjB,2BACCc,EACD,gBAAC,IAAD,CAAUzC,KAAMA,UAMxB,sBACEM,MAAO,CACL8B,cAAcnB,EAAAA,EAAAA,IAAO,MAGzB,8BACE,gBAAC,IAAD","sources":["webpack://gatsby-starter-blog/./src/components/hashtags.js","webpack://gatsby-starter-blog/./src/templates/tags.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nclass Hashtags extends React.Component {\r\n  render() {\r\n    const { tags } = this.props\r\n\r\n    return (\r\n        <span>\r\n          {tags.map((tag) => {\r\n            return (\r\n              <span>\r\n                {` `}\r\n                <Link\r\n                style={{\r\n                  boxShadow: `inset 0 -1px 0 rgba(27,31,35,.12)`,\r\n                  borderRadius: `2px`,\r\n                  padding: `.15em 4px`,\r\n                  textDecoration: `none`,\r\n                  fontWeight: `600`,\r\n                  fontSize: `12px`,\r\n                  height: `20px`,\r\n                  lineHeight: `15px`,\r\n                  color: `inherit`,\r\n                  marginLeft: rhythm(1/4),\r\n                  background: `#ededed`,\r\n                }}\r\n                to={`/tags/${tag}`}\r\n                key={tag}\r\n              >\r\n                #{tag}\r\n              </Link>\r\n              </span>\r\n            )\r\n          })}\r\n        </span>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Hashtags\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Hashtags from \"../components/hashtags\"\r\nimport Bio from \"../components/bio\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Tags = ({ pageContext, data }) => {\r\n  const { tag } = pageContext\r\n  const { edges, totalCount } = data.allMarkdownRemark\r\n  const { title } = data.site.siteMetadata\r\n  const tagHeader = `${totalCount} post${\r\n    totalCount === 1 ? \"\" : \"s\"\r\n  } tagged #${tag}`\r\n\r\n  return (\r\n    <Layout location={`/tags/${tag}`} title={title}>\r\n    <SEO title={`#${tag}`} />\r\n    <nav>\r\n      <ul\r\n        style={{\r\n          display: `flex`,\r\n          flexWrap: `wrap`,\r\n          justifyContent: `space-between`,\r\n          listStyle: `none`,\r\n          padding: 0,\r\n          marginBottom: 0,\r\n        }}\r\n      >\r\n        <li>\r\n        <Link to=\"/\">← All Posts</Link>\r\n        </li>\r\n        <li>\r\n        <Link to=\"/tags\">All Tags →</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    <div>\r\n      <h1>{tagHeader}</h1>\r\n      <ol>\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node.fields\r\n          const { title, date, tags } = node.frontmatter\r\n          return (\r\n            <li key={slug}>\r\n              <Link to={slug}>{title}</Link>\r\n              <br></br>\r\n              {date}\r\n              <Hashtags tags={tags} />\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </div>\r\n      <hr\r\n        style={{\r\n          marginBottom: rhythm(1),\r\n        }}\r\n      />\r\n      <footer>\r\n        <Bio />\r\n      </footer>\r\n\r\n\r\n    </Layout>\r\n  )\r\n}\r\n\r\nTags.propTypes = {\r\n    pageContext: PropTypes.shape({\r\n        tag: PropTypes.string.isRequired,\r\n    }),\r\n    data: PropTypes.shape({\r\n        allMarkdownRemark: PropTypes.shape({\r\n            totalCount: PropTypes.number.isRequired,\r\n            edges: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    node: PropTypes.shape({\r\n                        frontmatter: PropTypes.shape({\r\n                            title: PropTypes.string.isRequired,\r\n                            date: PropTypes.string.isRequired,\r\n                        }),\r\n                        fields: PropTypes.shape({\r\n                            slug: PropTypes.string.isRequired,\r\n                        }),\r\n                    }),\r\n                }).isRequired\r\n            ),\r\n        }),\r\n        site: PropTypes.shape({\r\n            siteMetadata: PropTypes.shape({\r\n                title: PropTypes.string.isRequired,\r\n            }),\r\n        }),\r\n    }),\r\n}\r\n\r\nexport default Tags\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["Hashtags","render","tags","this","props","map","tag","Link","style","boxShadow","borderRadius","padding","textDecoration","fontWeight","fontSize","height","lineHeight","color","marginLeft","rhythm","background","to","key","React","pageContext","data","allMarkdownRemark","edges","totalCount","title","site","siteMetadata","tagHeader","location","display","flexWrap","justifyContent","listStyle","marginBottom","node","slug","fields","frontmatter","date"],"sourceRoot":""}