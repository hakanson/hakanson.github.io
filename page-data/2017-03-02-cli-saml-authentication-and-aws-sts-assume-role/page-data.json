{"componentChunkName":"component---src-templates-blog-post-js","path":"/2017-03-02-cli-saml-authentication-and-aws-sts-assume-role","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"de369d07-e3b6-586e-86c8-dc519c73b12b","excerpt":"When I run a CLI based SAML log in (using an internal tool), I can select from the roles available to my account (e.g., PowerUser or ReadOnly).  I think of…","html":"<p>When I run a CLI based SAML log in (using an internal tool), I can select from the roles available to my account (e.g., PowerUser or ReadOnly).  I think of these as user roles.  However, IAM roles can also be created and assigned to EC2 instances or Lambda functions.  I was trying to understand how local code could run under one of those specific IAM roles.  I decided to try out <a href=\"http://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\">assume-role — AWS CLI 1.11.56 Command Reference</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws sts assume-role <span class=\"token punctuation\">\\</span>\r\n--role-arn arn:aws:iam::123456789012:role/kjh-s3-encryption-test1-role <span class=\"token punctuation\">\\</span>\r\n--role-session-name cli-kjh-s3-encryption-test1-role\r\n\r\nAn error occurred <span class=\"token punctuation\">(</span>AccessDenied<span class=\"token punctuation\">)</span> when calling the AssumeRole operation: User: arn:aws:sts::123456789012:assumed-role/PowerUser/kevin.hakanson@example.com is not authorized to perform: sts:AssumeRole on resource: arn:aws:iam::123456789012:role/kjh-s3-encryption-test1-role</code></pre></div>\n<p>As you can see, that didn’t work.  <code class=\"language-text\">PowerUser</code> has the authority to <code class=\"language-text\">sts:AssumeRole</code>, but I had to add myself to that role policy so my specific <code class=\"language-text\">Principal</code> could assume <code class=\"language-text\">kjh-s3-encryption-test1-role</code>.  The default was to only allow the EC2 service to do this.  You can see the full policy below.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws iam get-role <span class=\"token parameter variable\">--role</span> kjh-s3-encryption-test1-role\r\n\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"Role\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"AssumeRolePolicyDocument\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">\"Version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-10-17\"</span>,\r\n            <span class=\"token string\">\"Statement\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token string\">\"Action\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"sts:AssumeRole\"</span>,\r\n                    <span class=\"token string\">\"Effect\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Allow\"</span>,\r\n                    <span class=\"token string\">\"Principal\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n                        <span class=\"token string\">\"Service\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ec2.amazonaws.com\"</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                <span class=\"token punctuation\">}</span>,\r\n                <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token string\">\"Action\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"sts:AssumeRole\"</span>,\r\n                    <span class=\"token string\">\"Effect\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Allow\"</span>,\r\n                    <span class=\"token string\">\"Principal\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n                        <span class=\"token string\">\"AWS\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"arn:aws:sts::123456789012:assumed-role/PowerUser/kevin.hakanson@example.com\"</span>\r\n                    <span class=\"token punctuation\">}</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">]</span>\r\n        <span class=\"token punctuation\">}</span>,\r\n        <span class=\"token string\">\"RoleId\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"AROAXXXXXXXXXXXXXXXXX\"</span>,\r\n        <span class=\"token string\">\"CreateDate\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2016-08-13T16:31:08Z\"</span>,\r\n        <span class=\"token string\">\"RoleName\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"kjh-s3-encryption-test1-role\"</span>,\r\n        <span class=\"token string\">\"Path\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"/\"</span>,\r\n        <span class=\"token string\">\"Arn\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"arn:aws:iam::123456789012:role/kjh-s3-encryption-test1-role\"</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>After that change, I was able to perform an <code class=\"language-text\">AssumeRole</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws sts assume-role <span class=\"token punctuation\">\\</span>\r\n--role-arn arn:aws:iam::123456789012:role/kjh-s3-encryption-test1-role <span class=\"token punctuation\">\\</span>\r\n--role-session-name cli-kjh-s3-encryption-test1-role\r\n\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"AssumedRoleUser\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"AssumedRoleId\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"AROAXXXXXXXXXXXXXXXXX:cli-kjh-s3-encryption-test1-role\"</span>,\r\n        <span class=\"token string\">\"Arn\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"arn:aws:sts::123456789012:assumed-role/kjh-s3-encryption-test1-role/cli-kjh-s3-encryption-test1-role\"</span>\r\n    <span class=\"token punctuation\">}</span>,\r\n    <span class=\"token string\">\"Credentials\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"SecretAccessKey\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"&lt;secret>\"</span>,\r\n        <span class=\"token string\">\"SessionToken\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"&lt;token>\"</span>,\r\n        <span class=\"token string\">\"Expiration\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2017-03-01T22:41:37Z\"</span>,\r\n        <span class=\"token string\">\"AccessKeyId\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ASIAXXXXXXXXXXXXXXXX\"</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>However, this wasn’t as useful as I thought, since I would also need to create a profile and copy those credentials into my  <code class=\"language-text\">~/.aws/credentials</code> file.  Luckily, I discovered <a href=\"http://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html\">Assuming a Role - AWS Command Line Interface</a> and just added a new profile section to my <code class=\"language-text\">~/.aws/config</code> that referenced that role ARN and my <code class=\"language-text\">saml</code> profile.</p>\n<div class=\"gatsby-highlight\" data-language=\"ini\"><pre class=\"language-ini\"><code class=\"language-ini\"><span class=\"token section\"><span class=\"token punctuation\">[</span><span class=\"token section-name selector\">profile kjh-s3-encryption-test1-role</span><span class=\"token punctuation\">]</span></span>\r\n<span class=\"token key attr-name\">role_arn</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">arn:aws:iam::123456789012:role/kjh-s3-encryption-test1-role</span>\r\n<span class=\"token key attr-name\">source_profile</span> <span class=\"token punctuation\">=</span> <span class=\"token value attr-value\">saml</span></code></pre></div>\n<p>After that, I was able to automatically assume that role with the CLI by specifying my new profile.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws s3api <span class=\"token parameter variable\">--profile</span> kjh-s3-encryption-test1-role list-objects <span class=\"token punctuation\">\\</span>\r\n<span class=\"token parameter variable\">--bucket</span> kjh-encryption-test1 <span class=\"token punctuation\">\\</span>\r\n<span class=\"token parameter variable\">--prefix</span> cli-s3api-kms/\r\n\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"Contents\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">\"LastModified\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2016-12-06T21:02:16.000Z\"</span>,\r\n            <span class=\"token string\">\"ETag\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>f3a07b31bc1cee5e70b6f0bbd9c5bf09<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>\"</span>,\r\n            <span class=\"token string\">\"StorageClass\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"STANDARD\"</span>,\r\n            <span class=\"token string\">\"Key\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"cli-s3api-kms/QBF.txt.enc\"</span>,\r\n            <span class=\"token string\">\"Size\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">45</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Interestingly, when I run that same command with my <code class=\"language-text\">saml</code> profile, I got a different result:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws s3api <span class=\"token parameter variable\">--profile</span> saml list-objects <span class=\"token punctuation\">\\</span>\r\n<span class=\"token parameter variable\">--bucket</span> kjh-encryption-test1 <span class=\"token punctuation\">\\</span>\r\n<span class=\"token parameter variable\">--prefix</span> cli-s3api-kms/\r\n\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"Contents\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">\"LastModified\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2016-12-06T21:02:16.000Z\"</span>,\r\n            <span class=\"token string\">\"ETag\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>f3a07b31bc1cee5e70b6f0bbd9c5bf09<span class=\"token entity\" title=\"\\&quot;\">\\\"</span>\"</span>,\r\n            <span class=\"token string\">\"StorageClass\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"STANDARD\"</span>,\r\n            <span class=\"token string\">\"Key\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"cli-s3api-kms/QBF.txt.enc\"</span>,\r\n            <span class=\"token string\">\"Owner\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n                <span class=\"token string\">\"DisplayName\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"redacted\"</span>,\r\n                <span class=\"token string\">\"ID\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"redacted\"</span>\r\n            <span class=\"token punctuation\">}</span>,\r\n            <span class=\"token string\">\"Size\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">45</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Seeing the difference was the <code class=\"language-text\">Owner</code>, I added <code class=\"language-text\">s3:GetObjectAcl</code> to my policy using the AWS Console UI.  After that, I got the same result using either profile.  I also learned that if you want to see the policy document from the CLI, <code class=\"language-text\">get-policy</code> doesn’t give you that information…</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ aws iam get-policy --policy-arn arn:aws:iam::123456789012:policy/kjh-s3-encryption-test1\r\n\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"Policy\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"PolicyName\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"kjh-s3-encryption-test1\"</span>,\r\n        <span class=\"token string\">\"CreateDate\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2016-08-12T22:55:52Z\"</span>,\r\n        <span class=\"token string\">\"AttachmentCount\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>,\r\n        <span class=\"token string\">\"IsAttachable\"</span><span class=\"token builtin class-name\">:</span> true,\r\n        <span class=\"token string\">\"PolicyId\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"ANPAXXXXXXXXXXXXXXXXX\"</span>,\r\n        <span class=\"token string\">\"DefaultVersionId\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"v5\"</span>,\r\n        <span class=\"token string\">\"Path\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"/\"</span>,\r\n        <span class=\"token string\">\"Arn\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"arn:aws:iam::123456789012:policy/kjh-s3-encryption-test1\"</span>,\r\n        <span class=\"token string\">\"UpdateDate\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2017-03-01T22:15:36Z\"</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token punctuation\">..</span>. so you need to use <span class=\"token variable\"><span class=\"token variable\">`</span>get-policy-version<span class=\"token variable\">`</span></span> with the version <span class=\"token function\">id</span> to get that policy document.\r\n\r\n```console\r\n$ aws iam get-policy-version <span class=\"token punctuation\">\\</span>\r\n--policy-arn arn:aws:iam::123456789012:policy/kjh-s3-encryption-test1 <span class=\"token punctuation\">\\</span>\r\n--version-id v5\r\n\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token string\">\"PolicyVersion\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">\"CreateDate\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2017-03-01T22:15:36Z\"</span>,\r\n        <span class=\"token string\">\"VersionId\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"v5\"</span>,\r\n        <span class=\"token string\">\"Document\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\r\n            <span class=\"token string\">\"Version\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"2012-10-17\"</span>,\r\n            <span class=\"token string\">\"Statement\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token string\">\"Action\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n                        <span class=\"token string\">\"s3:DeleteObject\"</span>,\r\n                        <span class=\"token string\">\"s3:GetObject\"</span>,\r\n                        <span class=\"token string\">\"s3:PutObject\"</span>,\r\n                        <span class=\"token string\">\"s3:GetObjectAcl\"</span>\r\n                    <span class=\"token punctuation\">]</span>,\r\n                    <span class=\"token string\">\"Resource\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n                        <span class=\"token string\">\"arn:aws:s3:::kjh-encryption-test1/*\"</span>\r\n                    <span class=\"token punctuation\">]</span>,\r\n                    <span class=\"token string\">\"Effect\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Allow\"</span>\r\n                <span class=\"token punctuation\">}</span>,\r\n                <span class=\"token punctuation\">{</span>\r\n                    <span class=\"token string\">\"Action\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n                        <span class=\"token string\">\"s3:ListBucket\"</span>\r\n                    <span class=\"token punctuation\">]</span>,\r\n                    <span class=\"token string\">\"Resource\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">[</span>\r\n                        <span class=\"token string\">\"arn:aws:s3:::kjh-encryption-test1\"</span>\r\n                    <span class=\"token punctuation\">]</span>,\r\n                    <span class=\"token string\">\"Effect\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"Allow\"</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">]</span>\r\n        <span class=\"token punctuation\">}</span>,\r\n        <span class=\"token string\">\"IsDefaultVersion\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token boolean\">true</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hopefully, this will allow me to better understand and change IAM policies in order to apply the <a href=\"https://en.wikipedia.org/wiki/Principle_of_least_privilege\">Principle of least privilege</a> and only grant the specific actions required.</p>","frontmatter":{"title":"CLI SAML Authentication and AWS STS assume-role","description":null,"date":"March 2, 2017","tags":["aws","iam","cli"],"canonical":null}}},"pageContext":{"slug":"/2017-03-02-cli-saml-authentication-and-aws-sts-assume-role","previous":{"fields":{"slug":"/2017-02-15-monotonic-time-in-javascript"},"frontmatter":{"tags":["aws","xray","javascript","monitoring"]}},"next":{"fields":{"slug":"/2017-03-08-aws-request-ids"},"frontmatter":{"tags":["aws","http","monitoring"]}}}},"staticQueryHashes":["2589769190","97908498"]}