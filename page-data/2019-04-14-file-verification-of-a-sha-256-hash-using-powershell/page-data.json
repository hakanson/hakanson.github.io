{"componentChunkName":"component---src-templates-blog-post-js","path":"/2019-04-14-file-verification-of-a-sha-256-hash-using-powershell","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"e07788c0-4f82-543b-a3cc-0d0656ab763d","excerpt":"I was researching photo apps when I came across the open source digiKam.  Since I was going to download  from a mirror site, I wanted to perform some file…","html":"<p>I was researching photo apps when I came across the open source <a href=\"https://www.digikam.org/\">digiKam</a>.  Since I was going to download <code class=\"language-text\">digiKam-6.0.0-Win64.exe</code> from a mirror site, I wanted to perform some <a href=\"https://en.wikipedia.org/wiki/File_verification\">file verification</a> using one of the hash values. </p>\n<blockquote>\n<p>File information</p>\n<ul>\n<li>Filename: Mirrors for digiKam-6.0.0-Win64.exe</li>\n<li>Filename: digiKam-6.0.0-Win64.exe</li>\n<li>Path: /stable/digikam/6.0.0/digiKam-6.0.0-Win64.exe</li>\n<li>Size: 307M (321802858 bytes)</li>\n<li>Last modified: Sun, 10 Feb 2019 08:31:33 GMT (Unix time: 1549787493)</li>\n<li>SHA-256 Hash: 3a39d14bf98641dbce2072c9a68099e15acece4f94897113611e16fa4fcb58e8</li>\n<li>SHA-1 Hash: 7895d692e39e4c90b7c319e85e28b3634b586568</li>\n<li>MD5 Hash: d61404944f63fdf5c2dac3773d056978</li>\n</ul>\n</blockquote>\n<p>I normally use <a href=\"https://linux.die.net/man/1/shasum\">shasum</a> for this task since it is available on Linux, macOS, and Windows using Git Bash.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ shasum -a <span class=\"token number\">256</span> digiKam-6.0.0-Win64.exe\n3a39d14bf98641dbce2072c9a68099e15acece4f94897113611e16fa4fcb58e8 *digiKam-6.0.0-Win64.exe</code></pre></div>\n<p>Because I was going to suggest this program to a non-developer Windows 10 user, I wanted to find another way for them to verify.  Since Windows PowerShell is installed by default, I decided to use PowerShell <a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-5.1\">Get-FileHash</a>.  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">PS D:<span class=\"token punctuation\">\\</span>kevin<span class=\"token punctuation\">\\</span>downloads<span class=\"token operator\">></span> Get-FileHash .<span class=\"token punctuation\">\\</span>digiKam-6.0.0-Win64.exe <span class=\"token operator\">|</span> Format-List\n\nAlgorithm <span class=\"token builtin class-name\">:</span> SHA256\nHash      <span class=\"token builtin class-name\">:</span> 3A39D14BF98641DBCE2072C9A68099E15ACECE4F94897113611E16FA4FCB58E8\nPath      <span class=\"token builtin class-name\">:</span> D:<span class=\"token punctuation\">\\</span>kevin<span class=\"token punctuation\">\\</span>downloads<span class=\"token punctuation\">\\</span>digiKam-6.0.0-Win64.exe</code></pre></div>\n<p>From that output, I can compare the values by copying the value and doing a “find” on the download page.  But now that I was playing around with PowerShell, I wanted to explore better ways and did some exploration.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">PS D:<span class=\"token punctuation\">\\</span>kevin<span class=\"token punctuation\">\\</span>downloads<span class=\"token operator\">></span> <span class=\"token variable\">$hash</span> <span class=\"token operator\">=</span> Get-FileHash .<span class=\"token punctuation\">\\</span>digiKam-6.0.0-Win64.exe\nPS D:<span class=\"token punctuation\">\\</span>kevin<span class=\"token punctuation\">\\</span>downloads<span class=\"token operator\">></span> <span class=\"token variable\">$hash</span>.hash\n3A39D14BF98641DBCE2072C9A68099E15ACECE4F94897113611E16FA4FCB58E8\nPS D:<span class=\"token punctuation\">\\</span>kevin<span class=\"token punctuation\">\\</span>downloads<span class=\"token operator\">></span> <span class=\"token variable\">$hash</span>.hash -eq <span class=\"token string\">\"3a39d14bf98641dbce2072c9a68099e15acece4f94897113611e16fa4fcb58e8\"</span>\nTrue</code></pre></div>\n<p>I wasn’t expecting the case insensitive compare to work, but <a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_comparison_operators?view=powershell-5.1\">About Comparison Operators</a> verified this was the default as well as the other options.</p>\n<blockquote>\n<p>By default, all comparison operators are case-insensitive. To make a comparison operator case-sensitive, precede the operator name with a <em>c</em>. For example, the case-sensitive version of <em>-eq</em> is <em>-ceq</em>. To make the case-insensitivity explicit, precede the operator with an <em>i</em>. For example, the explicitly case-insensitive version of <em>-eq</em> is <em>-ieq</em>.</p>\n</blockquote>\n<p>Putting everything together, I can use this 1-liner as future reference.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">PS D:<span class=\"token punctuation\">\\</span>kevin<span class=\"token punctuation\">\\</span>downloads<span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>Get-FileHash .<span class=\"token punctuation\">\\</span>digiKam-6.0.0-Win64.exe<span class=\"token punctuation\">)</span>.hash -eq <span class=\"token string\">\"3a39d14bf98641dbce2072c9a68099e15acece4f94897113611e16fa4fcb58e8\"</span>\nTrue</code></pre></div>","frontmatter":{"title":"File Verification of a SHA-256 Hash using PowerShell","date":"April 14, 2019","tags":["powershell","security"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2019-04-14-file-verification-of-a-sha-256-hash-using-powershell","previous":{"fields":{"slug":"/2019-04-10-aws-iam-policy-for-service-user-s3-access"},"frontmatter":{"tags":["aws","iam","s3"]}},"next":{"fields":{"slug":"/2019-04-22-goodbye-oracle-java-8-hello-amazon-corretto-8"},"frontmatter":{"tags":["opensource","java","macos"]}}}}}