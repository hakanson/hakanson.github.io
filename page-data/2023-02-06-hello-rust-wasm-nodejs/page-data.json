{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-02-06-hello-rust-wasm-nodejs/","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"38c8e422-1f30-55d2-9a11-78eb3da0e806","excerpt":"I am working on a project that requires calling some Rust crates from a NodeJS runtime.  I had a project with some working code (which I didn’t fully understand…","html":"<p>I am working on a project that requires calling some Rust crates from a NodeJS runtime.  I had a project with some working code (which I didn’t fully understand), so I wanted to start by implementing the classic “Hello World!” problem.  Let’s start at the end with the TypeScript code:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> wasm <span class=\"token keyword\">from</span> <span class=\"token string\">\"hello-wasm\"</span><span class=\"token punctuation\">;</span>\n\nwasm<span class=\"token punctuation\">.</span><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"WASM\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>It’s “Hello WASM!” instead of “Hello World!”, but you get the point.</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token attribute attr-name\">#[wasm_bindgen]</span>\n<span class=\"token keyword\">pub</span> <span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">greet</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token keyword\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">use</span> <span class=\"token namespace\">web_sys<span class=\"token punctuation\">::</span></span>console<span class=\"token punctuation\">;</span>\n  <span class=\"token namespace\">console<span class=\"token punctuation\">::</span></span><span class=\"token function\">log_1</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token class-name\">JsValue</span><span class=\"token punctuation\">::</span><span class=\"token function\">from_str</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token macro property\">format!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, {}!\"</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Most of the Rust “magic” comes from <a href=\"https://docs.rs/wasm-bindgen/latest/wasm_bindgen/\">wasm-bindgen</a> and <a href=\"https://docs.rs/web-sys/latest/web_sys/\">web_sys</a>, but <a href=\"https://rustwasm.github.io/docs/wasm-pack/introduction.html\">wasm-pack</a> is what allows me to build rust-generated WebAssembly and use alongside my TypeScript.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">wasm-pack build <span class=\"token parameter variable\">--target</span> nodejs</code></pre></div>\n<p>Check out my “Hello World” in Rust, compiled to WASM, and called from NodeJS project on GitHub at <a href=\"https://github.com/hakanson/hello-rust-wasm-nodejs\">hakanson/hello-rust-wasm-nodejs</a>.  You don’t even need to install Rust because I used Visual Studio Code Dev Containers to <a href=\"https://code.visualstudio.com/docs/devcontainers/containers\">develop in a container</a></p>","frontmatter":{"title":"Hello Rust WASM NodeJS","description":null,"date":"February 6, 2023","tags":["rust","wasm"],"canonical":null}}},"pageContext":{"slug":"/2023-02-06-hello-rust-wasm-nodejs/","previous":{"fields":{"slug":"/2023-01-12-resilience-on-aws-at-codefreeze-2023/"},"frontmatter":{"tags":["aws","architecture","disasterrecovery","conference"]}},"next":{"fields":{"slug":"/2023-03-04-finding-outdated-aws-icons-in-drawio-files/"},"frontmatter":{"tags":["aws"]}}}},"staticQueryHashes":["2589769190","97908498"],"slicesMap":{}}