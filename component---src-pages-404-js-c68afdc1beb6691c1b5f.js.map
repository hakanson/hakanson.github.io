{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","location","React","Component","pageQuery","Wordpress2016","overrideThemeStyles","boxShadow","systemFontStack","headerFontFamily","bodyFontFamily","googleFonts","typography","Typography","GitHub","rhythm","scale","loader","enqueue","createContext","m","module","exports","require","default","ProdPageRenderer","pageResources","createElement","InternalPageRenderer","json","Layout","header","children","pathname","style","marginBottom","marginTop","textDecoration","color","to","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","description","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"mLAMMA,E,gLACJC,OAAA,WAAU,IAEFC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACE,kBAAC,IAAD,CAAQC,SAAUN,KAAKC,MAAMK,SAAUD,MAAON,GAC5C,kBAAC,IAAD,CAAKM,MAAM,mBACX,yCACA,wF,GATmBE,IAAMC,WAelBX,YAER,IAAMY,EAAS,c,iCCvBtB,0HAIAC,IAAcC,oBAAsB,WAClC,MAAO,CACL,2BAA4B,CAC1BC,UAAU,UAMhB,IAAMC,EAAkB,CAAC,gBAAiB,qBAAsB,WAAY,SAAU,iBAAkB,QAAS,YAAa,aAAc,oBAAqB,iBAAkB,kBAAmB,mBAAoB,YAE1NH,IAAcI,iBAAmBD,EACjCH,IAAcK,eAAiBF,SAExBH,IAAcM,YAGrB,IAAMC,EAAa,IAAIC,IAAWC,KAOnBF,IACFG,EAASH,EAAWG,OACpBC,EAAQJ,EAAWI,O,iCC9BhC,mFAcyBC,QAAOC,QAELhB,IAAMiB,cAAc,K,oBChB/C,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,G,0ECsBhCK,UAjBU,SAAC,GAAiC,IAA/BxB,EAA8B,EAA9BA,SAAUyB,EAAoB,EAApBA,cACpC,OAAKA,EAGExB,IAAMyB,cAAcC,IAApB,eACL3B,WACAyB,iBACGA,EAAcG,OALV,O,iFCFLC,E,gLACJrC,OAAA,WAAU,IAGJsC,EAHG,EAC+BpC,KAAKC,MAAnCK,EADD,EACCA,SAAUD,EADX,EACWA,MAAOgC,EADlB,EACkBA,SA8CzB,OAzCED,EAJY,MAGV9B,EAASgC,SAET,wBACEC,MAAK,iBACAlB,YAAM,MADN,CAEHmB,aAAcpB,YAAO,GACrBqB,UAAW,KAGb,kBAAC,IAAD,CACEF,MAAO,CACL3B,UAAU,OACV8B,eAAe,OACfC,MAAM,WAERC,GAAE,KAEDvC,IAML,wBACEkC,MAAO,CACLM,WAAW,yBACXJ,UAAW,IAGb,kBAAC,IAAD,CACEF,MAAO,CACL3B,UAAU,OACV8B,eAAe,OACfC,MAAM,WAERC,GAAE,KAEDvC,IAMP,yBACEkC,MAAO,CACLO,WAAW,OACXC,YAAY,OACZC,SAAU5B,YAAO,IACjB6B,QAAY7B,YAAO,KAAZ,IAAqBA,YAAO,OAGrC,gCAASgB,GACT,8BAAOC,GACP,sCACK,IAAIa,MAAOC,cADhB,kCAGE,uBAAGC,KAAK,4BAAR,UAHF,O,GA3Da7C,IAAMC,WAqEZ2B,O,gFC9Df,SAASkB,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMnD,EAAS,EAATA,MAC9BF,EADuC,OACvCA,KAcFsD,EAAkBH,GAAenD,EAAKC,aAAakD,YAEzD,OACE,kBAAC,IAAD,CACEI,eAAgB,CACdH,QAEFlD,MAAOA,EACPsD,cAAa,QAAUxD,EAAKC,aAAaC,MACzCmD,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASxD,GAEX,CACEyD,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAAS1D,EAAKC,aAAa2D,QAE7B,CACEH,KAAK,gBACLC,QAASxD,GAEX,CACEuD,KAAK,sBACLC,QAASJ,IAEXO,OAAOR,KAKfH,EAAIY,aAAe,CACjBV,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O","file":"component---src-pages-404-js-c68afdc1beb6691c1b5f.js","sourcesContent":["import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nclass NotFoundPage extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"404: Not Found\" />\r\n        <h1>Not Found</h1>\r\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default NotFoundPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n  }\r\n`\r\n","import Typography from \"typography\"\r\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\r\nimport GitHub from \"typography-theme-github\"\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    \"a.gatsby-resp-image-link\": {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\n// from https://medium.com/@jay_hankins/static-blogging-with-gatsby-on-github-pages-bbfd2c862e63\r\nconst systemFontStack = ['-apple-system', 'BlinkMacSystemFont', \"Segoe UI\", 'Roboto', \"Helvetica Neue\", 'Arial', \"Noto Sans\", 'sans-serif', \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", '!default'];\r\n\r\nWordpress2016.headerFontFamily = systemFontStack;\r\nWordpress2016.bodyFontFamily = systemFontStack;\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\n// const typography = new Typography(Wordpress2016)\r\nconst typography = new Typography(GitHub)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            ...scale(1.25),\r\n            marginBottom: rhythm(0),\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3\r\n          style={{\r\n            fontFamily: `Montserrat, sans-serif`,\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: `auto`,\r\n          marginRight: `auto`,\r\n          maxWidth: rhythm(36), // 24\r\n          padding: `${rhythm(3 /4)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        <header>{header}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          © {new Date().getFullYear()} Kevin Hakanson (built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>)\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n"],"sourceRoot":""}