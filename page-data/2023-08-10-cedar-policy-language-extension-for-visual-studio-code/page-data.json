{"componentChunkName":"component---src-templates-blog-post-js","path":"/2023-08-10-cedar-policy-language-extension-for-visual-studio-code/","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"6c3f1c6d-dbbd-50aa-950c-b0f7ce30808c","excerpt":"The Cedar policy language extension for Visual Studio Code is available for installation from the Visual Studio Marketplace as well as open source on GitHub at…","html":"<p>The <a href=\"https://marketplace.visualstudio.com/items?itemName=cedar-policy.vscode-cedar\">Cedar policy language extension for Visual Studio Code</a> is available for installation from the Visual Studio Marketplace as well as open source on GitHub at <a href=\"https://github.com/cedar-policy/vscode-cedar\">cedar-policy/vscode-cedar</a>.  This extension supports syntax highlighting, formatting, and validation of Cedar policy language (<code class=\"language-text\">*.cedar</code>) and Cedar schema (<code class=\"language-text\">cedarschema.json</code> / <code class=\"language-text\">*.cedarschema.json</code>) files.</p>\n<p>This was a project I started near the beginning of 2023 as personal tool to make my editing of Cedar files easier.  Why Visual Studio Code?  It’s what I use everyday, and “remains the preferred IDE across all developers” per <a href=\"https://survey.stackoverflow.co/2022#section-most-popular-technologies-integrated-development-environment\">Stack Overflow 2022 Developer Survey</a> with 74.48% of respondents.  When Cedar became open source in May, I started the process to have this extension published and become open source since “half of developers (55%) install UI themes and add-ons for their IDEs or editors” according to <a href=\"https://www.jetbrains.com/lp/devecosystem-2022/#what-kinds-of-plugins-do-you-install-with-your-ide-or-editor-if-any-\">The State of Developer Ecosystem 2022</a>.</p>\n<p>For a polished README, I created some (what I consider) nice looking animated GIF screen captures to show off the features, but wanted to find a solution that worked without installing any new software.</p>\n<p>I put Visual Studio Code in full screen mode, then hid stuff I didn’t want on the screen, including extra left rail views, minimap, etc.  I disabled any extensions adding unwanted problems (like spelling or markdown linting) that I didn’t wanted included.</p>\n<p>I created a script for myself that would look good in a loop, Then recorded using QuickTime to a <code class=\"language-text\">.mov</code> file on my desktop. Since my laptop is a MacBook Pro 16” 2019, the native screen resolution was 3584x2240.  I opened Keynote and set the custom size to 25% of that, or 896x540 then imported the <code class=\"language-text\">.mov</code> followed my an export to an Animated GIF, extra large resolution (1080x675), 15 fps, with 0-sec auto advance.</p>","frontmatter":{"title":"Cedar policy language extension for Visual Studio Code","description":null,"date":"August 10, 2023","tags":["cedar","vscode","opensource","rust","wasm"],"canonical":null}}},"pageContext":{"slug":"/2023-08-10-cedar-policy-language-extension-for-visual-studio-code/","previous":{"fields":{"slug":"/2023-07-01-my-favorite-laptop-stickers/"},"frontmatter":{"tags":["random"]}},"next":{"fields":{"slug":"/2023-10-25-agile-daily-stand-up-and-the-x-files/"},"frontmatter":{"tags":["random","agile"]}}}},"staticQueryHashes":["2589769190","97908498"],"slicesMap":{}}