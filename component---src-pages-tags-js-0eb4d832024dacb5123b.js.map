{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1__","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_components_bio__WEBPACK_IMPORTED_MODULE_4__","gatsby__WEBPACK_IMPORTED_MODULE_5__","_utils_typography__WEBPACK_IMPORTED_MODULE_6__","TagsPage","_ref","_ref$data","data","group","allMarkdownRemark","title","site","siteMetadata","a","createElement","location","style","display","flexWrap","justifyContent","listStyle","padding","marginBottom","to","map","tag","key","fieldValue","kebabCase","totalCount","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_2__","typography_theme_github__WEBPACK_IMPORTED_MODULE_2___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","systemFontStack","headerFontFamily","bodyFontFamily","googleFonts","typography","Typography","GitHub","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","m","module","exports","require","default","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","render","header","_this$props","this","props","children","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","Date","getFullYear","href","Component","SEO","description","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Bio","_public_static_d_2741186254_json__WEBPACK_IMPORTED_MODULE_1__","_data$site$siteMetada","social","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle","twitter","linkedin","github"],"mappings":"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","file":"component---src-pages-tags-js-0eb4d832024dacb5123b.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Utilities\r\nimport kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Bio from \"../components/bio\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\n// TODO: look at https://dev.to/tags tag names and colors\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n    <Layout location=\"/tags\" title={title}>\r\n        <SEO title=\"All Tags\" />\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            <li>\r\n            <Link to=\"/\">‚Üê All Posts</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div>\r\n        <h1>All Tags</h1>\r\n        <ul>\r\n            {group.map(tag => (\r\n            <li key={tag.fieldValue}>\r\n                <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\r\n                {tag.fieldValue} ({tag.totalCount})\r\n                </Link>\r\n            </li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n        <hr\r\n            style={{\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          />\r\n        <footer>\r\n            <Bio />\r\n        </footer>\r\n\r\n    </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`","import Typography from \"typography\"\r\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\r\nimport GitHub from \"typography-theme-github\"\r\n\r\nWordpress2016.overrideThemeStyles = () => {\r\n  return {\r\n    \"a.gatsby-resp-image-link\": {\r\n      boxShadow: `none`,\r\n    },\r\n  }\r\n}\r\n\r\n// from https://medium.com/@jay_hankins/static-blogging-with-gatsby-on-github-pages-bbfd2c862e63\r\nconst systemFontStack = ['-apple-system', 'BlinkMacSystemFont', \"Segoe UI\", 'Roboto', \"Helvetica Neue\", 'Arial', \"Noto Sans\", 'sans-serif', \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\", '!default'];\r\n\r\nWordpress2016.headerFontFamily = systemFontStack;\r\nWordpress2016.bodyFontFamily = systemFontStack;\r\n\r\ndelete Wordpress2016.googleFonts\r\n\r\n// const typography = new Typography(Wordpress2016)\r\nconst typography = new Typography(GitHub)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== `production`) {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            ...scale(1.25),\r\n            marginBottom: rhythm(0),\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3\r\n          style={{\r\n            fontFamily: `Montserrat, sans-serif`,\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: `none`,\r\n              textDecoration: `none`,\r\n              color: `inherit`,\r\n            }}\r\n            to={`/`}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: `auto`,\r\n          marginRight: `auto`,\r\n          maxWidth: rhythm(36), // 24\r\n          padding: `${rhythm(3 /4)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        <header>{header}</header>\r\n        <main>{children}</main>\r\n        <footer>\r\n          ¬© {new Date().getFullYear()} Kevin Hakanson (built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>)\r\n        </footer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author\r\n          social {\r\n            twitter\r\n            linkedin\r\n            github\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(1),\r\n      }}\r\n    >\r\n      <Image\r\n        fixed={data.avatar.childImageSharp.fixed}\r\n        alt={author}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`,\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`,\r\n        }}\r\n      />\r\n      <p>\r\n        {` `}\r\n        Software Architect. Web Platform. JavaScript. Cloud. Information Security. Speaker. \r\n        <br></br>\r\n        <a href={`https://twitter.com/${social.twitter}`}>\r\n          Twitter\r\n        </a>\r\n        {` | `}\r\n        <a href={`https://www.linkedin.com/in/${social.linkedin}/`}>\r\n          LinkedIn\r\n        </a>\r\n        {` | `}\r\n        <a href={`https://github.com/${social.github}`}>\r\n          GitHub\r\n        </a>\r\n        {` | `}\r\n        <a href={`https://stackoverflow.com/users/22514/kevin-hakanson`}>\r\n          Stack Overflow\r\n        </a>\r\n        \r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n"],"sourceRoot":""}