{"version":3,"sources":["webpack:///./src/components/hashtags.js","webpack:///./src/pages/index.js"],"names":["Hashtags","render","tags","this","props","map","tag","style","boxShadow","borderRadius","padding","textDecoration","fontWeight","fontSize","height","lineHeight","color","marginLeft","rhythm","background","to","key","React","Component","BlogIndex","data","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","year","location","display","flexWrap","justifyContent","listStyle","marginBottom","node","frontmatter","fields","slug","yearheader","len","date","length","substring","scale","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"wJAKMA,E,kGACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KAER,OACI,8BACGA,EAAKG,KAAI,SAACC,GACT,OACE,kCAEE,kBAAC,OAAD,CACAC,MAAO,CACLC,UAAU,oCACVC,aAAa,MACbC,QAAQ,YACRC,eAAe,OACfC,WAAW,MACXC,SAAS,OACTC,OAAO,OACPC,WAAW,OACXC,MAAM,UACNC,WAAYC,YAAO,EAAE,GACrBC,WAAW,WAEbC,GAAE,SAAWd,EACbe,IAAKf,GAfL,IAiBEA,S,GA3BKgB,IAAMC,WAqCdvB,O,sJCjCTwB,E,kGACJvB,OAAA,WACE,IAAQwB,EAAStB,KAAKC,MAAdqB,KACFC,EAAYD,EAAKE,KAAKC,aAAaC,MACnCC,EAAQL,EAAKM,kBAAkBC,MACjCC,EAAO,OAEX,OACE,kBAAC,IAAD,CAAQC,SAAU/B,KAAKC,MAAM8B,SAAUL,MAAOH,GAC5C,kBAAC,IAAD,CAAKG,MAAM,cACX,6BACE,wBACEtB,MAAO,CACL4B,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACV5B,QAAS,EACT6B,aAAc,IAGhB,iCAGA,4BACA,kBAAC,OAAD,CAAMnB,GAAG,kBAAT,sBAIJ,kBAAC,IAAD,MACCU,EAAMzB,KAAI,YAAe,IAAZmC,EAAW,EAAXA,KACNX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KAC9CzC,EAAOsC,EAAKC,YAAYvC,MAAQ,GAClC0C,GAAa,EACXC,EAAML,EAAKC,YAAYK,KAAKC,OAKlC,OAJIP,EAAKC,YAAYK,KAAKE,UAAUH,EAAI,EAAGA,KAASZ,IAClDA,EAAOO,EAAKC,YAAYK,KAAKE,UAAUH,EAAI,EAAGA,GAC9CD,GAAa,GAGb,6BAASvB,IAAKmB,EAAKE,OAAOC,MACvBC,GAAc,4BAAKX,GAEpB,gCACE,wBACE1B,MAAO,CACLgC,aAAcrB,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMX,MAAO,CAAEC,UAAU,QAAWY,GAAIoB,EAAKE,OAAOC,MACjDd,IAGL,uBACEtB,MAAK,iBACA0C,aAAM,IADN,CAEHd,QAAQ,WAGTK,EAAKC,YAAYK,KAClB,kBAAC,IAAD,CAAU5C,KAAMA,MAIpB,iCACE,uBACEgD,wBAAyB,CACvBC,OAA8CX,EAAKY,gBAO/D,wBACE7C,MAAO,CACLgC,aAAcrB,YAAO,Q,GA5ETI,IAAMC,WAoFfC","file":"component---src-pages-index-js-5ef37bc23bd5b61ca1db.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nclass Hashtags extends React.Component {\r\n  render() {\r\n    const { tags } = this.props\r\n\r\n    return (\r\n        <span>\r\n          {tags.map((tag) => {\r\n            return (\r\n              <span>\r\n                {` `}\r\n                <Link\r\n                style={{\r\n                  boxShadow: `inset 0 -1px 0 rgba(27,31,35,.12)`,\r\n                  borderRadius: `2px`,\r\n                  padding: `.15em 4px`,\r\n                  textDecoration: `none`,\r\n                  fontWeight: `600`,\r\n                  fontSize: `12px`,\r\n                  height: `20px`,\r\n                  lineHeight: `15px`,\r\n                  color: `inherit`,\r\n                  marginLeft: rhythm(1/4),\r\n                  background: `#ededed`,\r\n                }}\r\n                to={`/tags/${tag}`}\r\n                key={tag}\r\n              >\r\n                #{tag}\r\n              </Link>\r\n              </span>\r\n            )\r\n          })}\r\n        </span>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Hashtags\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Hashtags from \"../components/hashtags\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nclass BlogIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n    let year = \"9999\"\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"All Posts\" />\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              &nbsp;\r\n            </li>\r\n            <li>\r\n            <Link to=\"/presentations\">Presentations â†’</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <Bio />\r\n        {posts.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          const tags = node.frontmatter.tags || []\r\n          let yearheader = false\r\n          const len = node.frontmatter.date.length\r\n          if (node.frontmatter.date.substring(len-4, len) !== year) {\r\n            year = node.frontmatter.date.substring(len-4, len)\r\n            yearheader = true\r\n          }\r\n          return (\r\n            <article key={node.fields.slug}>\r\n              {yearheader && <h2>{year}</h2>}\r\n\r\n              <header>\r\n                <h3\r\n                  style={{\r\n                    marginBottom: rhythm(1 / 4),\r\n                  }}\r\n                >\r\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                    {title}\r\n                  </Link>\r\n                </h3>\r\n                <p\r\n                  style={{\r\n                    ...scale(-1 / 5),\r\n                    display: `block`,\r\n                  }}\r\n                >\r\n                  {node.frontmatter.date}\r\n                  <Hashtags tags={tags} />\r\n                </p>\r\n\r\n              </header>\r\n              <section>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: /* node.frontmatter.description || */ node.excerpt,\r\n                  }}\r\n                />\r\n              </section>\r\n            </article>\r\n          )\r\n        })}\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n         />\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {fields: {sourceName: {eq: \"blog\"}}}\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt(pruneLength: 240)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            tags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}