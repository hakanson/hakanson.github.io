{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-06-30-aws-cloudformation-linter-custom-rules","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"f9109528-9a6e-528d-9fbe-30fcbde1bc73","excerpt":"While diving deep on AWS CloudFormation Linter (cfn-lint), I discovered Custom Rules support. The linter supports the creation of custom one-line rules whichâ€¦","html":"<p>While diving deep on <a href=\"https://github.com/aws-cloudformation/cfn-lint\">AWS CloudFormation Linter</a> (cfn-lint), I discovered <a href=\"https://github.com/aws-cloudformation/cfn-lint/blob/main/docs/custom_rules.md\">Custom Rules</a> support.</p>\n<blockquote>\n<p>The linter supports the creation of custom one-line rules which compare any resource with a property using pre-defined operators.</p>\n</blockquote>\n<p>To give it a try, I created a simple rule that enforced a naming standard for my Python Lambda functions by creating <code class=\"language-text\">cfn_custom_rules.txt</code> containing my custom rule.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">AWS::Lambda::Function Handler EQUALS \"app.lambda_handler\" WARN \"Lambda function handler should be app.lambda_handler\"</code></pre></div>\n<p>Then when I run <code class=\"language-text\">cfn-lint</code>, I can include evaluation of this custom rule file.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ cfn-lint template.yaml --custom-rules cfn_custom_rules.txt</code></pre></div>\n<p>Of course, I need this in my <code class=\"language-text\">buildspec.yml</code> so AWS CodePipeline and AWS CodeBuild would enforce this.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\">  <span class=\"token key atrule\">pre_build</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">commands</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> cfn<span class=\"token punctuation\">-</span>lint template.yaml <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>custom<span class=\"token punctuation\">-</span>rules cfn_custom_rules.txt\n      <span class=\"token punctuation\">-</span> status=$<span class=\"token punctuation\">?</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n        if [ $status -ne 0 ]; then \n          exit 1;\n        fi</span></code></pre></div>\n<p>An alternative to the <code class=\"language-text\">--custom-rules</code> CLI option is to add a section to my <code class=\"language-text\">.cfnlintrc.yaml</code> to automatically enable this option and allows for easy integration with the Visual Studio Code <a href=\"https://marketplace.visualstudio.com/items?itemName=kddejong.vscode-cfn-lint\">vscode-cfn-lint</a> extension.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># https://github.com/aws-cloudformation/cfn-lint#configuration</span>\n<span class=\"token key atrule\">custom_rules</span><span class=\"token punctuation\">:</span> cfn_custom_rules.txt</code></pre></div>","frontmatter":{"title":"AWS CloudFormation Linter Custom Rules","description":null,"date":"June 30, 2021","tags":["aws","cloudformation"],"canonical":null}}},"pageContext":{"slug":"/2021-06-30-aws-cloudformation-linter-custom-rules","previous":{"fields":{"slug":"/2021-03-22-its-day-1-at-aws"},"frontmatter":{"tags":["career","aws"]}},"next":{"fields":{"slug":"/2021-07-29-my-first-c-aws-lambda-function"},"frontmatter":{"tags":["aws","lambda","csharp","dotnet"]}}}},"staticQueryHashes":["2589769190","97908498"]}