{"version":3,"sources":["webpack:///./src/components/hashtags.js","webpack:///./src/templates/blog-post.js"],"names":["Hashtags","render","tags","this","props","map","tag","style","boxShadow","borderRadius","padding","textDecoration","fontWeight","fontSize","height","lineHeight","color","marginLeft","rhythm","background","to","key","React","Component","BlogPostTemplate","post","data","markdownRemark","siteTitle","site","siteMetadata","title","pageContext","previous","next","location","frontmatter","description","excerpt","display","flexWrap","justifyContent","listStyle","marginBottom","fields","slug","rel","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","pageQuery"],"mappings":"gJAKMA,E,gLACJC,OAAA,WAAU,IACAC,EAASC,KAAKC,MAAdF,KAER,OACI,8BACGA,EAAKG,KAAI,SAACC,GACT,OACE,kCAEE,kBAAC,OAAD,CACAC,MAAO,CACLC,UAAU,oCACVC,aAAa,MACbC,QAAQ,YACRC,eAAe,OACfC,WAAW,MACXC,SAAS,OACTC,OAAO,OACPC,WAAW,OACXC,MAAM,UACNC,WAAYC,YAAO,EAAE,GACrBC,WAAW,WAEbC,GAAE,SAAWd,EACbe,IAAKf,GAfL,IAiBEA,S,GA3BKgB,IAAMC,WAqCdvB,O,kMCjCTwB,E,gLACJvB,OAAA,WACE,IAAMwB,EAAOtB,KAAKC,MAAMsB,KAAKC,eACvBC,EAAYzB,KAAKC,MAAMsB,KAAKG,KAAKC,aAAaC,MAF7C,EAGoB5B,KAAKC,MAAM4B,YAA9BC,EAHD,EAGCA,SAAUC,EAHX,EAGWA,KAElB,OACE,kBAAC,IAAD,CAAQC,SAAUhC,KAAKC,MAAM+B,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CACEG,MAAON,EAAKW,YAAYL,MACxBM,YAAaZ,EAAKW,YAAYC,aAAeZ,EAAKa,UAGpD,6BACE,wBACE/B,MAAO,CACLgC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVhC,QAAS,EACTiC,aAAc,IAGhB,4BACGV,GACC,kBAAC,OAAD,CAAMb,GAAIa,EAASW,OAAOC,KAAMC,IAAI,QAApC,eAKJ,4BACGZ,GACC,kBAAC,OAAD,CAAMd,GAAIc,EAAKU,OAAOC,KAAMC,IAAI,QAAhC,aAQR,iCACE,gCACE,wBACEvC,MAAO,CACLwC,UAAW7B,YAAO,GAClByB,aAAc,IAGflB,EAAKW,YAAYL,OAEpB,uBACExB,MAAK,iBACAyC,aAAM,IADN,CAEHT,QAAQ,QACRI,aAAczB,YAAO,MAGtBO,EAAKW,YAAYa,KAClB,kBAAC,IAAD,CAAU/C,KAAMuB,EAAKW,YAAYlC,SAGrC,6BAASgD,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QACjD,wBACE7C,MAAO,CACLoC,aAAczB,YAAO,MAGzB,gCACE,kBAAC,IAAD,U,GArEmBI,IAAMC,WA+EtBC,YAER,IAAM6B,EAAS","file":"component---src-templates-blog-post-js-ddb758594346e2c936e4.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nclass Hashtags extends React.Component {\r\n  render() {\r\n    const { tags } = this.props\r\n\r\n    return (\r\n        <span>\r\n          {tags.map((tag) => {\r\n            return (\r\n              <span>\r\n                {` `}\r\n                <Link\r\n                style={{\r\n                  boxShadow: `inset 0 -1px 0 rgba(27,31,35,.12)`,\r\n                  borderRadius: `2px`,\r\n                  padding: `.15em 4px`,\r\n                  textDecoration: `none`,\r\n                  fontWeight: `600`,\r\n                  fontSize: `12px`,\r\n                  height: `20px`,\r\n                  lineHeight: `15px`,\r\n                  color: `inherit`,\r\n                  marginLeft: rhythm(1/4),\r\n                  background: `#ededed`,\r\n                }}\r\n                to={`/tags/${tag}`}\r\n                key={tag}\r\n              >\r\n                #{tag}\r\n              </Link>\r\n              </span>\r\n            )\r\n          })}\r\n        </span>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Hashtags\r\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Hashtags from \"../components/hashtags\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nclass BlogPostTemplate extends React.Component {\r\n  render() {\r\n    const post = this.props.data.markdownRemark\r\n    const siteTitle = this.props.data.site.siteMetadata.title\r\n    const { previous, next } = this.props.pageContext\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO\r\n          title={post.frontmatter.title}\r\n          description={post.frontmatter.description || post.excerpt}\r\n        />\r\n\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            <li>\r\n              {previous && (\r\n                <Link to={previous.fields.slug} rel=\"prev\">\r\n                  ← previous\r\n                </Link>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {next && (\r\n                <Link to={next.fields.slug} rel=\"next\">\r\n                  next →\r\n                </Link>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n\r\n        <article>\r\n          <header>\r\n            <h1\r\n              style={{\r\n                marginTop: rhythm(1),\r\n                marginBottom: 0,\r\n              }}\r\n            >\r\n              {post.frontmatter.title}\r\n            </h1>\r\n            <p\r\n              style={{\r\n                ...scale(-1 / 5),\r\n                display: `block`,\r\n                marginBottom: rhythm(1),\r\n              }}\r\n            >\r\n              {post.frontmatter.date}\r\n              <Hashtags tags={post.frontmatter.tags} />\r\n            </p>\r\n          </header>\r\n          <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n          <hr\r\n            style={{\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          />\r\n          <footer>\r\n            <Bio />\r\n          </footer>\r\n        </article>\r\n\r\n\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        tags\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}