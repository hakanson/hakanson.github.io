{"componentChunkName":"component---src-templates-blog-post-js","path":"/2022-04-10-python-typings-for-aws-lambda-function-events/","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"2c1519db-6a44-5ad6-a4c0-db4947017da2","excerpt":"I was building a Python-based AWS Lambda function similar to what was announced by New – Use Amazon S3 Event Notifications with Amazon EventBridge and the code…","html":"<p>I was building a Python-based AWS Lambda function similar to what was announced by <a href=\"https://aws.amazon.com/blogs/aws/new-use-amazon-s3-event-notifications-with-amazon-eventbridge/\">New – Use Amazon S3 Event Notifications with Amazon EventBridge</a> and the code looked similar to this - full of “magic strings” that I had to discover.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> boto3\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lambda_handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    bucket <span class=\"token operator\">=</span> event<span class=\"token punctuation\">[</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'bucket'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span>\n    file_key <span class=\"token operator\">=</span> event<span class=\"token punctuation\">[</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">]</span>\n\n    s3 <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'s3'</span><span class=\"token punctuation\">)</span>\n    file_to_process <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">(</span>Bucket<span class=\"token operator\">=</span>bucket<span class=\"token punctuation\">,</span> Key<span class=\"token operator\">=</span>file_key<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Python has a module called <a href=\"https://docs.python.org/3/library/typing.html\">typing</a> that provides support for type hints, which make for a nice autocomplete experience in Visual Studio Code.  I started googling for some options and first found <a href=\"https://pypi.org/project/aws-lambda-typing/\">AWS Lambda Typing</a> and it’s <a href=\"https://github.com/MousaZeidBaker/aws-lambda-typing/blob/master/src/aws_lambda_typing/events/s3.py\">events/s3.py</a> uses TypedDict from typing.</p>\n<p>Here is the same code using those type definitions - still “magic strings” but they autocomplete.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> aws_lambda_typing <span class=\"token keyword\">import</span> context <span class=\"token keyword\">as</span> context_<span class=\"token punctuation\">,</span> events\n<span class=\"token keyword\">from</span> aws_lambda_typing<span class=\"token punctuation\">.</span>s3 <span class=\"token keyword\">import</span> S3\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">:</span> events<span class=\"token punctuation\">.</span>EventBridgeEvent<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">:</span> context_<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n    event_detail<span class=\"token punctuation\">:</span> S3 <span class=\"token operator\">=</span> S3<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">[</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    bucket <span class=\"token operator\">=</span> event_detail<span class=\"token punctuation\">[</span><span class=\"token string\">'bucket'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span>\n    file_key <span class=\"token operator\">=</span> event_detail<span class=\"token punctuation\">[</span><span class=\"token string\">'object'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'key'</span><span class=\"token punctuation\">]</span>\n\n    s3 <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'s3'</span><span class=\"token punctuation\">)</span>\n    file_to_process <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">(</span>Bucket<span class=\"token operator\">=</span>bucket<span class=\"token punctuation\">,</span> Key<span class=\"token operator\">=</span>file_key<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Next I found that <a href=\"https://awslabs.github.io/aws-lambda-powertools-python/latest/\">Lambda Powertools Python</a> has <a href=\"https://awslabs.github.io/aws-lambda-powertools-python/latest/utilities/data_classes/\">Event Source Data Classes</a> and it’s <a href=\"https://github.com/awslabs/aws-lambda-powertools-python/blob/develop/aws_lambda_powertools/utilities/data_classes/s3_event.py\">s3_event.py</a> uses custom <a href=\"https://github.com/awslabs/aws-lambda-powertools-python/blob/develop/aws_lambda_powertools/utilities/data_classes/common.py\">DictWrapper</a> class which “Provides a single read only access to a wrapper dict.”</p>\n<p>Here is the same code using those type definitions - less “magic strings” and some properties.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> boto3\n<span class=\"token keyword\">from</span> aws_lambda_powertools<span class=\"token punctuation\">.</span>utilities<span class=\"token punctuation\">.</span>typing <span class=\"token keyword\">import</span> LambdaContext\n<span class=\"token keyword\">from</span> aws_lambda_powertools<span class=\"token punctuation\">.</span>utilities<span class=\"token punctuation\">.</span>data_classes <span class=\"token keyword\">import</span> event_source<span class=\"token punctuation\">,</span> EventBridgeEvent\n<span class=\"token keyword\">from</span> aws_lambda_powertools<span class=\"token punctuation\">.</span>utilities<span class=\"token punctuation\">.</span>data_classes<span class=\"token punctuation\">.</span>s3_event <span class=\"token keyword\">import</span> S3Message\n\n<span class=\"token decorator annotation punctuation\">@event_source</span><span class=\"token punctuation\">(</span>data_class<span class=\"token operator\">=</span>EventBridgeEvent<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">lambda_handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">:</span> EventBridgeEvent<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">:</span> LambdaContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token comment\"># can use either event['detail'] or event.detail</span>\n    event_detail<span class=\"token punctuation\">:</span> S3Message <span class=\"token operator\">=</span> S3Message<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">[</span><span class=\"token string\">'detail'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    bucket <span class=\"token operator\">=</span> event_detail<span class=\"token punctuation\">.</span>bucket<span class=\"token punctuation\">.</span>name\n    file_key <span class=\"token operator\">=</span> event_detail<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">.</span>key\n\n    s3 <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'s3'</span><span class=\"token punctuation\">)</span>\n    file_to_process <span class=\"token operator\">=</span> s3<span class=\"token punctuation\">.</span>get_object<span class=\"token punctuation\">(</span>Bucket<span class=\"token operator\">=</span>bucket<span class=\"token punctuation\">,</span> Key<span class=\"token operator\">=</span>file_key<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Python Typings for AWS Lambda Function Events","description":null,"date":"April 10, 2022","tags":["aws","lambda","python"],"canonical":null}}},"pageContext":{"slug":"/2022-04-10-python-typings-for-aws-lambda-function-events/","previous":{"fields":{"slug":"/2022-03-29-aws-jwt-verify-v300-released/"},"frontmatter":{"tags":["aws","opensource","security"]}},"next":{"fields":{"slug":"/2022-06-06-aws-icons-for-plantuml-v130-released/"},"frontmatter":{"tags":["aws","opensource","uml"]}}}},"staticQueryHashes":["2589769190","97908498"],"slicesMap":{}}