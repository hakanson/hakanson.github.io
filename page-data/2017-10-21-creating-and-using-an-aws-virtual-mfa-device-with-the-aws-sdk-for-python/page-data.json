{"componentChunkName":"component---src-templates-blog-post-js","path":"/2017-10-21-creating-and-using-an-aws-virtual-mfa-device-with-the-aws-sdk-for-python","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"08935122-298f-50af-8278-b94413e2a46a","excerpt":"Some scenarios, like on-premise servers that need access to AWS resources, require AWS IAM Users to be created.  These “service users” are given Access Keys…","html":"<p>Some scenarios, like on-premise servers that need access to AWS resources, require AWS IAM Users to be created.  These “service users” are given Access Keys, which serve as long term credentials and needed to be protected.  An additional measure of protection could be to enable programmatic multifactor authentication for these users.</p>\n<p>This Python code creates a virtual MFA device with <a href=\"http://boto3.readthedocs.io/en/latest/index.html\">Boto 3</a> (AWS SDK for Python).  The  <a href=\"https://boto3.readthedocs.io/en/latest/reference/services/iam.html#IAM.Client.create_virtual_mfa_device\"><code class=\"language-text\">create_virtual_mfa_device</code></a> response includes a shared secret (saved in <code class=\"language-text\">string_seed</code>) and the bytes of a PNG image of a QR code that can be used with standard Authenticator apps.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">session <span class=\"token operator\">=</span> boto3<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">.</span>Session<span class=\"token punctuation\">(</span>profile_name<span class=\"token operator\">=</span><span class=\"token string\">'kjh-SuperDuperUser'</span><span class=\"token punctuation\">)</span>\niam_client <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'iam'</span><span class=\"token punctuation\">)</span>\n\nresponse <span class=\"token operator\">=</span> iam_client<span class=\"token punctuation\">.</span>create_virtual_mfa_device<span class=\"token punctuation\">(</span>\n    Path<span class=\"token operator\">=</span><span class=\"token string\">'/service-user/'</span><span class=\"token punctuation\">,</span>\n    VirtualMFADeviceName<span class=\"token operator\">=</span><span class=\"token string\">'kjh-SuperDuperUser'</span>\n<span class=\"token punctuation\">)</span>\n\nstring_seed <span class=\"token operator\">=</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'VirtualMFADevice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'Base32StringSeed'</span><span class=\"token punctuation\">]</span>\n\nqrbytes <span class=\"token operator\">=</span> response<span class=\"token punctuation\">[</span><span class=\"token string\">'VirtualMFADevice'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'QRCodePNG'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'kjh-SuperDuperUser.png'</span><span class=\"token punctuation\">,</span> mode<span class=\"token operator\">=</span><span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span>\n    f<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>qrbytes<span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Using <a href=\"https://github.com/pyotp/pyotp\">GitHub - pyotp/pyotp: Python One-Time Password Library</a>, two consecutive codes are generated from the <code class=\"language-text\">string_seed</code> to enable the virtual mfa device for the user.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">totp <span class=\"token operator\">=</span> pyotp<span class=\"token punctuation\">.</span>TOTP<span class=\"token punctuation\">(</span>string_seed<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># the code from 30 seconds ago</span>\ncode_1 <span class=\"token operator\">=</span> totp<span class=\"token punctuation\">.</span>generate_otp<span class=\"token punctuation\">(</span>totp<span class=\"token punctuation\">.</span>timecode<span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> datetime<span class=\"token punctuation\">.</span>timedelta<span class=\"token punctuation\">(</span>seconds<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># the current code</span>\ncode_2 <span class=\"token operator\">=</span> totp<span class=\"token punctuation\">.</span>generate_otp<span class=\"token punctuation\">(</span>totp<span class=\"token punctuation\">.</span>timecode<span class=\"token punctuation\">(</span>datetime<span class=\"token punctuation\">.</span>datetime<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nresponse <span class=\"token operator\">=</span> iam_client<span class=\"token punctuation\">.</span>enable_mfa_device<span class=\"token punctuation\">(</span>\n    UserName<span class=\"token operator\">=</span><span class=\"token string\">'kjh-SuperDuperUser'</span><span class=\"token punctuation\">,</span>\n    SerialNumber<span class=\"token operator\">=</span><span class=\"token string\">'arn:aws:iam::123456789012:mfa/service-user/kjh-SuperDuperUser'</span><span class=\"token punctuation\">,</span>\n    AuthenticationCode1<span class=\"token operator\">=</span>code_1<span class=\"token punctuation\">,</span>\n    AuthenticationCode2<span class=\"token operator\">=</span>code_2\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Afterwards, looking at the AWS Console indicates <code class=\"language-text\">kjh-SuperDuperUser</code> now has an assigned MFA device.  Additionally, <code class=\"language-text\">kjh-DuperRole</code> has this Trust Policy, which requires MFA to be present for <code class=\"language-text\">sts:AssumeRole</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"Principal\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"AWS\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"arn:aws:iam::123456789012:user/service-user/kjh-SuperDuperUser\"</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sts:AssumeRole\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"Condition\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"Bool\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token property\">\"aws:MultiFactorAuthPresent\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"true\"</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>To use the Virtual MFA Device in an <a href=\"http://boto3.readthedocs.io/en/latest/reference/services/sts.html#STS.Client.assume_role\"><code class=\"language-text\">assume_role</code></a> API call, a TOTP code needs to be generated and passed as a parameter.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">sts_client <span class=\"token operator\">=</span> session<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">(</span><span class=\"token string\">'sts'</span><span class=\"token punctuation\">)</span>\n\ntotp <span class=\"token operator\">=</span> pyotp<span class=\"token punctuation\">.</span>TOTP<span class=\"token punctuation\">(</span>string_seed<span class=\"token punctuation\">)</span>\ntoken_code <span class=\"token operator\">=</span> totp<span class=\"token punctuation\">.</span>now<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nresponse <span class=\"token operator\">=</span> sts_client<span class=\"token punctuation\">.</span>assume_role<span class=\"token punctuation\">(</span>\n    RoleArn<span class=\"token operator\">=</span><span class=\"token string\">'arn:aws:iam::123456789012:role/kjh-DuperRole'</span><span class=\"token punctuation\">,</span>\n    RoleSessionName<span class=\"token operator\">=</span><span class=\"token string\">'my-python-session'</span><span class=\"token punctuation\">,</span>\n    SerialNumber<span class=\"token operator\">=</span><span class=\"token string\">'arn:aws:iam::123456789012:mfa/service-user/kjh-SuperDuperUser'</span><span class=\"token punctuation\">,</span>\n    TokenCode<span class=\"token operator\">=</span>token_code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Note:  This IAM Policy needed to be added to <code class=\"language-text\">kjh-SuperDuperUser</code> in order to allow the MFA related actions.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Statement\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"iam:CreateVirtualMFADevice\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"iam:DeleteVirtualMFADevice\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"arn:aws:iam::123456789012:mfa/service-user/${aws:username}\"</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"iam:EnableMFADevice\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"iam:DeactivateMFADevice\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token string\">\"iam:ResyncMFADevice\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"arn:aws:iam::123456789012:user/service-user/${aws:username}\"</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token property\">\"Effect\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"iam:ListVirtualMFADevices\"</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token property\">\"Resource\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"arn:aws:iam::123456789012:mfa/*\"</span>\n            <span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>References:</p>\n<ul>\n<li><a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_virtual.html\">Enabling a Virtual Multi-factor Authentication (MFA) Device - AWS Identity and Access Management</a></li>\n<li><a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_enable_cliapi.html\">Enable and manage virtual MFA devices (AWS CLI, Tools for Windows PowerShell, or AWS API) - AWS Identity and Access Management</a></li>\n<li><a href=\"http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html\">Configuring MFA-Protected API Access - AWS Identity and Access Management</a></li>\n</ul>","frontmatter":{"title":"Creating and Using an AWS Virtual MFA Device with the AWS SDK for Python","description":null,"date":"October 21, 2017","tags":["aws","sdk","python","iam","mfa","security"],"canonical":null}}},"pageContext":{"slug":"/2017-10-21-creating-and-using-an-aws-virtual-mfa-device-with-the-aws-sdk-for-python","previous":{"fields":{"slug":"/2017-10-21-hashicorp-vault-supports-aws-sts-assumerole-and-totp"},"frontmatter":{"tags":["aws","iam","mfa","security"]}},"next":{"fields":{"slug":"/2017-10-22-using-the-virtual-mfa-device-with-the-aws-cli"},"frontmatter":{"tags":["aws","cli","iam","mfa","security"]}}}},"staticQueryHashes":["2589769190","3567236516"]}