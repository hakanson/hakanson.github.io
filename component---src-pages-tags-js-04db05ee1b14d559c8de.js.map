{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","style","display","flexWrap","justifyContent","listStyle","padding","marginBottom","to","map","tag","key","fieldValue","tags","totalCount","rhythm","pageQuery"],"mappings":"2FAAA,kJAgFeA,UAnEE,SAAC,GAAD,QACfC,KACuBC,EAFR,EAEbC,kBAAqBD,MAEHE,EAJL,EAGbC,KACEC,aAAgBF,MAJL,OAQb,kBAAC,IAAD,CAAQG,SAAS,QAAQH,MAAOA,GAC5B,kBAAC,IAAD,CAAKA,MAAM,aACX,6BACE,wBACEI,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,EACTC,aAAc,IAGhB,4BACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,kBAIJ,6BACA,wCACA,4BACKb,EAAMc,KAAI,SAAAC,GAAG,OACd,wBAAIC,IAAKD,EAAIE,YACT,kBAAC,IAAD,CAAUC,KAAM,CAACH,EAAIE,cADzB,MAEaF,EAAII,iBAKrB,wBACIb,MAAO,CACLM,aAAcQ,YAAO,MAG3B,gCACI,kBAAC,IAAD,SA0BL,IAAMC,EAAS","file":"component---src-pages-tags-js-04db05ee1b14d559c8de.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\n// Components\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Hashtags from \"../components/hashtags\"\r\nimport Bio from \"../components/bio\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\n// TODO: look at https://dev.to/tags tag names and colors\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  },\r\n}) => (\r\n    <Layout location=\"/tags\" title={title}>\r\n        <SEO title=\"All Tags\" />\r\n        <nav>\r\n          <ul\r\n            style={{\r\n              display: `flex`,\r\n              flexWrap: `wrap`,\r\n              justifyContent: `space-between`,\r\n              listStyle: `none`,\r\n              padding: 0,\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            <li>\r\n            <Link to=\"/\">← All Posts</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div>\r\n        <h1>All Tags</h1>\r\n        <ul>\r\n            {group.map(tag => (\r\n            <li key={tag.fieldValue}>\r\n                <Hashtags tags={[tag.fieldValue]} />\r\n                &nbsp;× {tag.totalCount}\r\n            </li>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n        <hr\r\n            style={{\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          />\r\n        <footer>\r\n            <Bio />\r\n        </footer>\r\n\r\n    </Layout>\r\n)\r\n\r\nTagsPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      group: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          fieldValue: PropTypes.string.isRequired,\r\n          totalCount: PropTypes.number.isRequired,\r\n        }).isRequired\r\n      ),\r\n    }),\r\n    site: PropTypes.shape({\r\n      siteMetadata: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n      }),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}