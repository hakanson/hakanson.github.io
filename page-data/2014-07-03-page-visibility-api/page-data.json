{"componentChunkName":"component---src-templates-blog-post-js","path":"/2014-07-03-page-visibility-api","webpackCompilationHash":"f141a48750e2a6a883f2","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"949cbb63-e7dd-5541-942e-f2dc4b55af80","excerpt":"I am taking an online Leadership & Influence for Architects training series with about 20 architects across the company.  The facilitator requested full…","html":"<p>I am taking an online <strong>Leadership &#x26; Influence for Architects</strong> training series with about 20 architects across the company.  The facilitator requested full attention and to avoid the temptation to multi-task.  Of course, I complied, but I wondered if they could detect infractions from the other attendees.  Then I remembered the <a href=\"http://www.w3.org/TR/page-visibility/\">Page Visibility API</a> and realized that they could tell if anyone was switching browser tabs to check email or Twitter.  I’m sure that some advertisers use this to force you to watch that 30-second lead-in video ad before consuming the content you came to watch.</p>\n<p>I wanted to code something up and give it a try.  The MDN <a href=\"https://developer.mozilla.org/en-US/docs/Web/Guide/User_experience/Using_the_Page_Visibility_API\">Using the Page Visibility API</a> document got me started, but I wanted to hook this DOM event into an AngularJS based application.  The following snippet of code will <code class=\"language-text\">$broadcast</code> the values of <code class=\"language-text\">document.hidden</code> and <code class=\"language-text\">document.visibilityState</code> whenever <code class=\"language-text\">visibilitychange</code> fires.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    app<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'$log'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$rootScope'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$document'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$log<span class=\"token punctuation\">,</span> $rootScope<span class=\"token punctuation\">,</span> $document</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        $log<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listen for visibilitychange event'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        $document<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilitychange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            $log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hidden='</span> <span class=\"token operator\">+</span> document<span class=\"token punctuation\">.</span>hidden <span class=\"token operator\">+</span> <span class=\"token string\">' / visibilityState='</span> <span class=\"token operator\">+</span> document<span class=\"token punctuation\">.</span>visibilityState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            $rootScope<span class=\"token punctuation\">.</span><span class=\"token function\">$broadcast</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilityChange'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>hidden<span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span>visibilityState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>To listen for this event, I hooked up to <code class=\"language-text\">$rootScope</code>, but could have also hooked to a <code class=\"language-text\">$scope</code> from inside a controller.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">    app<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'$log'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'$rootScope'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">$log<span class=\"token punctuation\">,</span> $rootScope</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        $rootScope<span class=\"token punctuation\">.</span><span class=\"token function\">$on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'visibilityChange'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event<span class=\"token punctuation\">,</span> hidden<span class=\"token punctuation\">,</span> visibilityState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            $log<span class=\"token punctuation\">.</span><span class=\"token function\">info</span><span class=\"token punctuation\">(</span>hidden <span class=\"token operator\">+</span> <span class=\"token string\">' / '</span> <span class=\"token operator\">+</span> visibilityState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>As I switched tabs, I could see the change between <code class=\"language-text\">hidden=true / visibilityState=hidden</code> and <code class=\"language-text\">hidden=false / visibilityState=visible</code>  However, in Chrome if the tab is on top of its own window, you can switch to a tab on another Chrome window without firing the event.</p>\n<p>You may ask why am I spending time on this and how is this relevant to building web applications?  Imagine if your app was using websockets or long polling to communicate with the server.  You may make an app decision to throttle back those requests after a tab goes hidden in order to save the user’s resources (e.g. battery or bandwidth). If the application has collaboration features like chat or online presence awareness, the visibility state could provide useful information.  Additionally, if the user has multiple tabs open and their session times out, you might only want to redirect the visible tab back to the login page.  Those are just a few ideas for using the Page Visibility API.</p>","frontmatter":{"title":"Page Visibility API","date":"July 03, 2014","tags":["javascript","ux","angularjs"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2014-07-03-page-visibility-api","previous":{"fields":{"slug":"/2014-07-03-cdn-hosting-of-javascript-and-information-security-aspects"},"frontmatter":{"tags":["javascript","security","webdev"]}},"next":{"fields":{"slug":"/2014-07-31-reimagining-cobaltjs-preferences-in-angularjs-using-uml"},"frontmatter":{"tags":["javascript","architecture","uml"]}}}}}