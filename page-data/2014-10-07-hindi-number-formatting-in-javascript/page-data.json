{"componentChunkName":"component---src-templates-blog-post-js","path":"/2014-10-07-hindi-number-formatting-in-javascript","webpackCompilationHash":"af0e4c24d4a507da8bf9","result":{"data":{"site":{"siteMetadata":{"title":"kevinhakanson.com","author":"Kevin Hakanson"}},"markdownRemark":{"id":"84fdd785-1da9-577c-b8db-06fcc17956e6","excerpt":"For a project I am consulting on, we were looking at globalization topics in the browser, including support for Hindi.  I have mostly worked with Latin based…","html":"<p>For a project I am consulting on, we were looking at globalization topics in the browser, including support for Hindi.  I have mostly worked with Latin based character sets in my internationalization efforts, so I wanted to dig into the topic a bit.  I started with my favorite date for test cases and thought I would see how various JavaScript libraries/frameworks handled the formatting.  Testing was done in Chrome 37.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> then <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2013</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>AngularJS</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$filter</span><span class=\"token punctuation\">(</span><span class=\"token string\">'date'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>then<span class=\"token punctuation\">,</span> <span class=\"token string\">'EEEE, d MMMM y h:mm:ss a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>मंगलवार, 1 जनवरी 2013 1:01:01 pm</p>\n</blockquote>\n<h3>Twitter CLDR</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> fmt <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">TwitterCldr<span class=\"token punctuation\">.</span>DateTimeFormatter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>then<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"type\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'full'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>मंगलवार, 1 जनवरी 2013 1:01:01 अपराह्न UTC-06:00</p>\n</blockquote>\n<h3>ECMA 402</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  weekday<span class=\"token punctuation\">:</span> <span class=\"token string\">\"long\"</span><span class=\"token punctuation\">,</span>\n  month<span class=\"token punctuation\">:</span> <span class=\"token string\">\"short\"</span><span class=\"token punctuation\">,</span>\n  day<span class=\"token punctuation\">:</span> <span class=\"token string\">\"numeric\"</span><span class=\"token punctuation\">,</span>\n  year<span class=\"token punctuation\">:</span> <span class=\"token string\">\"numeric\"</span><span class=\"token punctuation\">,</span>\n  hour<span class=\"token punctuation\">:</span> <span class=\"token string\">\"numeric\"</span><span class=\"token punctuation\">,</span>\n  minute<span class=\"token punctuation\">:</span> <span class=\"token string\">\"2-digit\"</span><span class=\"token punctuation\">,</span>\n  second<span class=\"token punctuation\">:</span> <span class=\"token string\">\"2-digit\"</span><span class=\"token punctuation\">,</span>\n  hour12<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> dtf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>DateTimeFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hi'</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ndtf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>then<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>मंगलवार, १ जनवरी २०१३ १:०१:०१ अपराह्न</p>\n</blockquote>\n<h3>jQuery Globalize</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Globalize<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span> then <span class=\"token punctuation\">,</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'hi'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>01 जनवरी 2013 13:01:01</p>\n</blockquote>\n<h3>MomentJS</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">moment</span><span class=\"token punctuation\">(</span>then<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">'LLLL'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>मंगलवार, १ जनवरी २०१३, दोपहर १:०१ बजे</p>\n</blockquote>\n<p>Now, these aren’t exactly the same format options across the libraries, but they are close.  You can see similar string values across the libraries, but you may notice that AngularJS and MomentJS use Devanagari numerals instead of our familiar 0-9 (see <a href=\"http://en.wikipedia.org/wiki/Indian_numerals\">Indian numerals</a>).</p>\n<table>\n<thead>\n<tr>\n<th>Modern Devanagari</th>\n<th>Hindu–Arabic</th>\n<th>Hindi word for the cardinal numeral</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>०</td>\n<td>0</td>\n<td>śūnya (शून्य)</td>\n</tr>\n<tr>\n<td>१</td>\n<td>1</td>\n<td>ék (एक)</td>\n</tr>\n<tr>\n<td>२</td>\n<td>2</td>\n<td>do (दो)</td>\n</tr>\n<tr>\n<td>३</td>\n<td>3</td>\n<td>tīn (तीन)</td>\n</tr>\n<tr>\n<td>४</td>\n<td>4</td>\n<td>cār (चार)</td>\n</tr>\n<tr>\n<td>५</td>\n<td>5</td>\n<td>pān̄c (पाँच)</td>\n</tr>\n<tr>\n<td>६</td>\n<td>6</td>\n<td>chaḥ (छः)</td>\n</tr>\n<tr>\n<td>७</td>\n<td>7</td>\n<td>sāt (सात)</td>\n</tr>\n<tr>\n<td>८</td>\n<td>8</td>\n<td>āṭh (आठ)</td>\n</tr>\n<tr>\n<td>९</td>\n<td>9</td>\n<td>nau (नौ)</td>\n</tr>\n</tbody>\n</table>\n<p>I looked in the ECMA 402 specification and found Devanagari referenced as deva (U+0966 to U+096F) in <a href=\"http://www.ecma-international.org/ecma-402/1.0/#table-2\">Table 2 – Numbering systems with simple digit mappings</a>. The “Date and time formatting options” section of <a href=\"http://generatedcontent.org/post/59403168016/esintlapi\">ECMAScript Internationalization API</a> gave me a clue on the next steps.</p>\n<p><em>As with NumberFormat, the numberingSystem property can only be set with the Unicode u extension to the language tag, using the nu keyword.</em></p>\n<p>I decided to reduce my test case to some simpler number formatting to continue my experiment.  Chrome, Firefox and IE 11 all supported both “hi-u-nu-latn” and “hi-u-nu-deva” as extensions.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">num <span class=\"token operator\">=</span> <span class=\"token number\">1234567890</span>\n\n<span class=\"token number\">1234567890</span>\n\nnum<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi-u-nu-latn\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token string\">\"1,23,45,67,890\"</span>\n\nnum<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi-u-nu-deva\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token string\">\"१,२३,४५,६७,८९०\"</span></code></pre></div>\n<p>However, Chrome 37 was alone in selecting “deva” as the default numbering system.  Firefox, IE 11, and even Chrome 40 canary selected “latn” instead.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>NumberFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolvedOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nObject <span class=\"token punctuation\">{</span>locale<span class=\"token punctuation\">:</span> <span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">,</span> numberingSystem<span class=\"token punctuation\">:</span> <span class=\"token string\">\"deva\"</span><span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">:</span> <span class=\"token string\">\"decimal\"</span><span class=\"token punctuation\">,</span> useGrouping<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> minimumIntegerDigits<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>…<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Intl<span class=\"token punctuation\">.</span>NumberFormat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span>\n\n<span class=\"token string\">\"१,२३,४५,६७,८९०\"</span></code></pre></div>\n<p>The formatting mystery has been solved.  If I continued, I would look at how to parse these same formatted numbers and dates in JavaScript.  I am less confident about that.</p>","frontmatter":{"title":"Hindi Number Formatting in JavaScript","date":"October 07, 2014","tags":["javascript","i18n"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/2014-10-07-hindi-number-formatting-in-javascript","previous":{"fields":{"slug":"/2014-09-23-i-was-a-victim-of-internet-plagiarism"},"frontmatter":{"tags":["random","i18n"]}},"next":{"fields":{"slug":"/2014-11-13-c-and-net-without-windows-or-visual-studio"},"frontmatter":{"tags":["csharp","dotnet","opensource"]}}}}}